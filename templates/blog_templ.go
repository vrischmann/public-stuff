// Code generated by templ@v0.2.364 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"strconv"
	"time"
)

type BlogItem struct {
	LinkURL  string
	LinkText string
	Date     time.Time
}

type BlogItems struct {
	Year  int
	Items []BlogItem
}

func BlogIndex(allItems []BlogItems) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, items := range allItems {
			_, err = templBuffer.WriteString("<div class=\"blog-month\"><h2>")
			if err != nil {
				return err
			}
			var var_2 string = strconv.FormatInt(int64(items.Year), 10)
			_, err = templBuffer.WriteString(templ.EscapeString(var_2))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h2><ul>")
			if err != nil {
				return err
			}
			for _, item := range items.Items {
				_, err = templBuffer.WriteString("<li><a href=\"")
				if err != nil {
					return err
				}
				var var_3 templ.SafeURL = templ.SafeURL(item.LinkURL)
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_3)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_4 string = item.LinkText
				_, err = templBuffer.WriteString(templ.EscapeString(var_4))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a><span>")
				if err != nil {
					return err
				}
				var var_5 string = item.Date.Format("January 02")
				_, err = templBuffer.WriteString(templ.EscapeString(var_5))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></li>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</ul></div>")
			if err != nil {
				return err
			}
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func BlogContent(title string, date time.Time, tableOfContents templ.Component, content templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_6 := templ.GetChildren(ctx)
		if var_6 == nil {
			var_6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"article-header\"><h1>")
		if err != nil {
			return err
		}
		var var_7 string = title
		_, err = templBuffer.WriteString(templ.EscapeString(var_7))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><h4>")
		if err != nil {
			return err
		}
		var var_8 string = date.Format("2006 Jan 02")
		_, err = templBuffer.WriteString(templ.EscapeString(var_8))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h4></div><div class=\"article\"><nav class=\"blog-toc\">")
		if err != nil {
			return err
		}
		err = tableOfContents.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</nav>")
		if err != nil {
			return err
		}
		err = content.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
